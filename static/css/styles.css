#rtcbox {
  align-items: start;
  display: none;
  flex: 0 1 auto;
  flex-direction: column;
  justify-content: start;
  padding: 0;
  order: -1; /* on left side */
  box-sizing: border-box;
  background-color: transparent;
  height: auto;
  overflow: auto;
}

#rtcbox .video-container {
  flex: 0 0 auto;
  align-items: center;
  background-color: black;
  border: 1px solid black;
  border-left: 5px solid;
  box-sizing: content-box;
  display: flex;
  height: auto;
  justify-content: center;
  overflow: hidden;
  resize: both;
  /*
   * This serves two purposes:
   *   - It creates a stacking context so that the `z-index: -1;` rule on the
   *     video element doesn't send the video behind the background.
   *   - It causes the `position: absolute;` rule on the .interface-container
   *     div to position relative to the .video-container div.
   */
  transform: translateZ(0);
  width: auto;
}
#rtcbox .video-container:not(:first-child) {
  margin-top: 5px;
}
#rtcbox video {
  box-sizing: content-box;
  background-color: black;
  height: 100%;
  object-fit: contain;
  width: 100%;
  /*
   * Without this, Safari puts the lower right resize handle for the
   * containing div (.video-container) behind the video. Chrome and Firefox
   * do not have the same defect.
   */
  z-index: -1;
}

#rtcbox .video-container .interface-btn,
#rtcbox .video-container .user-name {
  --interface-text-color-rgb: 87, 98, 115; /* --dark-color */
  --interface-background-color-rgb: 242, 243, 244; /* --light-color */
  --interface-text-alpha: 0.6;
  --interface-background-alpha: 0.2;
  background-color: rgba(var(--interface-background-color-rgb),
                         var(--interface-background-alpha));
  color: rgba(var(--interface-text-color-rgb), var(--interface-text-alpha));
  transition: background-color .2s, color .2s;
}
#rtcbox .video-container:hover .interface-btn,
#rtcbox .video-container:hover .user-name {
  --interface-text-alpha: 0.8;
  --interface-background-alpha: 0.7;
}
#rtcbox .video-container:hover .interface-btn:hover,
#rtcbox .video-container:hover .user-name:hover {
  --interface-text-alpha: 1.0;
  --interface-background-alpha: 1.0;
}
#rtcbox .video-container:hover .interface-btn:hover {
  filter: drop-shadow(0 0 2px rgba(var(--interface-text-color-rgb),
                                   var(--interface-text-alpha)));
}
#rtcbox .video-container .disallowed {
  display: none;
}

#rtcbox .interface-container {
  display: flex;
  min-width: min-content;
  position: absolute;
  bottom: 0px;
  left: 0px;
  padding: 5px;
}
#rtcbox .interface-btn {
  flex: 0 0 auto;
  border-radius: 50%;
  padding: 5px;
  margin: 3px;
  cursor: pointer;
  width: 28px;
  height: 28px;
}

#rtcbox .interface-btn.audio-btn:before { content: '\e83d'; }
#rtcbox .interface-btn.audio-btn.muted:before { content: '\e83e'; }

#rtcbox .interface-btn.video-btn:before { content: '\e83b'; }
#rtcbox .interface-btn.video-btn.off:before { content: '\e83c'; }

#rtcbox .interface-btn.enlarge-btn:before { content: '\e840'; }
#rtcbox .interface-btn.enlarge-btn.large:before { content: '\e83f'; }

#rtcbox .video-container .user-name {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  font-weight: bold;
  height: min-content;
  z-index: 5;
  overflow: hidden;
  padding: 0px 8px;
  white-space: nowrap;
  text-overflow: ellipsis;
}
#rtcbox .video-container.local-user {
  order: -1; /* first position */
}

@media (max-width: 800px) {
  #editorcontainerbox {
    flex-direction: column;
  }
  #rtcbox {
    flex-direction: row;
    order: 2;
  }
  #rtcbox .video-container:not(:first-child) {
    margin-top: 0;
    margin-left: 5px;
  }
}
